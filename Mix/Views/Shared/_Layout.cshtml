@using Mix.Models;
@using Mix.Services;
@using System.Linq;

<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Noto+Sans">
        <link rel="stylesheet" type="text/css" href="~/Content/Style.css">
        <link rel="icon" href="~/Content/favicon.ico" />
        <title>Miksd</title>
    </head>
    <body>
    <div id="all">
        <div id="header">
            <img class="glass" src="~/Content/glass.png" />

            <div id="header-main">
                <div id="header-top">
                    <h1 id="title">Miksd</h1>
                    <div id="cocktail-search"></div>
                </div>

                <div id="header-bottom">
                    <p id="subtitle">Your guide to cocktails / mixed drinks</p>
                    <div id="header-bottom-right">
                        <div id="ingredient-search-wrapper">
                            @(new HtmlString(ImageService.IngredientSearchIcon()))
                            <div id="ingredient-search"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <ul class="menu">
            <li class="@(Request.RawUrl == "/" ? "current" : "")"><a href="/">Featured</a></li>

            @foreach (var category in CocktailCategory.Categories)
            {
                List<Ingredients> ingredients = category.Ingredients;
                var link = "/?title=" + Url.Encode(category.Name);

                if (ingredients != null)
                {
                    if (category.Full)
                    {
                        link += "&f=1";
                    }
                    link += "&c=1&i=" + string.Join("&i=", ingredients.Select(i => (long)i));
                }
                if (category.Vessel != Vessels.None)
                {
                    link += "&v=" + (long)category.Vessel;
                }

                <li class="@(link == Request.RawUrl ? "current" : "")"><a href="@link">@category.Name</a></li>
            }
        </ul>

        <div id="content">
            @RenderBody()
            <script src="~/React/dist/mix.js"></script>
            <script src="~/Content/Mix.js"></script>
        </div>
    </div>
    </body>
</html>
