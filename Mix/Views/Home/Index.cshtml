@using Mix.Models;
@using System.Linq;

@{
    ViewBag.Title = ViewBag.Category;
}

<form>
    <div class="filters">
    @foreach (var ingredient in ViewBag.Ingredients)
    {
        var id = (long)ingredient.Id;
        <span class="filter-select">
            <input type="checkbox" id="ingredient-@id" name="i" value="@id" @(ViewBag.IngredientsFilter != null &&
                ViewBag.IngredientsFilter.Contains(ingredient.Id) ? "checked='checked'" : string.Empty) />
            <label for="ingredient-@id">@ingredient.Name</label>
        </span>
    }
    </div>
    <input type="submit" value="Search" />
</form>

<dl>
<dt class="result-header">@ViewBag.Category</dt>
@for (var i = 0; i < ViewBag.Cocktails.Count; i++)
{
    Cocktail cocktail = ViewBag.Cocktails[i];
    var ingredients = cocktail.Recipe
        .Where(ingredient => !ingredient.IsOptional)
        .Select(ingredient => ingredient.Name);
    var prepInVessel = cocktail.PrepMethod == PrepMethods.Build || cocktail.PrepMethod == PrepMethods.Layer;

    if (i == ViewBag.MatchCount && ViewBag.MatchCount > 0)
    {
        <dt class="result-header">More Cocktails</dt>
    }

    <dd>
        <dl>
            <dt class="cocktail-name">
                <a href="/Cocktail/@((long)cocktail.Id)">@cocktail.Name</a>
            </dt>
            <dd>
                <p>@String.Join(", ", ingredients)<br />
                @cocktail.PrepMethodName @(prepInVessel ? " in a " : " & strain into a ") @cocktail.VesselName</p>
            </dd>
        </dl>
    </dd>
}
</dl>